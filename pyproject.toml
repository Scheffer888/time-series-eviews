[project]
name = "timeseries-eviews"
dynamic = ["version"]
description = 'Python package for ARMA, GARCH, and VAR modeling with EViews-style diagnostics'
readme = "README.md"
requires-python = ">=3.10"
license = "Apache-2.0"
keywords = ["Time Series", "Econometrics", "Finance", "ARMA", "GARCH", "VAR", "EViews"]
authors = [
  { name = "Eduardo Belisario Scheffer", email = "eduardoscheffer@uchicago.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]

dependencies = [
  "pandas>=1.0.0",
  "numpy>=1.20.0",
  "statsmodels>=0.13.0",
  "arch>=5.0",
  "matplotlib>=3.0",
  "scipy>=1.5.0",
  "click",
]

[project.scripts]
timeseries-eviews = "timeseries_eviews.cli:main"

[project.urls]
Documentation = "https://github.com/Scheffer888/timeseries-eviews#readme"
Issues = "https://github.com/Scheffer888/timeseries-eviews/issues"
Source = "https://github.com/Scheffer888/timeseries-eviews"

[tool.hatch.version]
path = "src/timeseries_eviews/__about__.py"

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
  "pandas-stubs",
  "types-setuptools",
  "types-matplotlib",
  "types-scipy",
]

[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/ tests/}"

[tool.coverage.run]
source_pkgs = ["timeseries_eviews", "tests"]
branch = true
parallel = true
omit = [
  "src/timeseries_eviews/__about__.py",
]

[tool.coverage.paths]
timeseries_eviews = ["src/timeseries_eviews", "*/timeseries-eviews/src/timeseries_eviews"]
tests = ["tests", "*/timeseries_eviews/tests"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
packages = ["src/timeseries_eviews"]
include = [
    "src/timeseries_eviews/data/**"
]

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning:statsmodels.*:",
    "ignore::FutureWarning",
]

[tool.mypy]
# Ignore missing type hints in external packages
ignore_missing_imports = true

[tool.hatch.envs.test]
dependencies = [
  "pytest>=7.0",
  "pytest-cov",
  "setuptools",
  "wheel",
  "pandas",
  "numpy",
  "statsmodels",
  "arch",
  "scipy",
  "importlib_resources>=5.0.0",
]

[tool.hatch.envs.test.scripts]
test = "pytest {args:tests}"
